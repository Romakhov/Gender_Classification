import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import make_moons, make_circles, make_classification
from sklearn.neural_network import MLPClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.gaussian_process import GaussianProcessClassifier
from sklearn.gaussian_process.kernels import RBF
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis

# [height, weight, shoe_size]
X = [[181, 80, 44], [177, 70, 43], [160, 60, 38], [154, 54, 37], [166, 65, 40],
     [190, 90, 47], [175, 64, 39],
     [177, 70, 40], [159, 55, 37], [171, 75, 42], [181, 85, 43]]

Y = ['male', 'male', 'female', 'female', 'male', 'male', 'female', 'female',
     'female', 'male', 'male']


#clf_tree = tree.DecisionTreeClassifier()
clf_gauss = GaussianNB()
clf_qda = QuadraticDiscriminantAnalysis()

#clf_tree.fit(X, Y)
clf_gauss.fit(X, Y)
clf_qda.fit(X, Y)

pred_tree = clf_gauss.predict(X)
acc_gauss = accuracy_score(Y, pred_tree)
print('Accuracy for Gaussian: {}'.format(acc_gauss))

pred_svm = clf_qda.predict(X)
acc_qda = accuracy_score(Y, pred_svm) 
print('Accuracy for QDA: {}'.format(acc_qda))



# The best classifier from svm, per, KNN
index = np.argmax([acc_gauss, acc_qda])
classifiers = {0: 'Gaussian', 1: 'QDA'}
print('Best gender classifier is {}'.format(classifiers[index]))


